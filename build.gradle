plugins {
    id 'java'
    id 'maven-publish'
    id 'dev.lukebemish.managedversioning' version '1.2.21'
}

group = 'dev.lukebemish'

managedVersioning {
    versionFile.set project.file('version.properties')

    gitHubActions {
        release {
            prettyName.set 'Release'
            workflowDispatch.set(true)
            gradleJob {
                buildCache()
                name.set 'build'
                javaVersion.set '21'
                step {
                    setupGitUser()
                }
                readOnly.set false
                gradlew 'Tag Release', 'tagRelease'
                gradlew 'Build', 'build'
                step {
                    run.set 'git push && git push --tags'
                }
                recordVersion 'Record Version', 'version'
            }
            gradleJob {
                buildCache()
                name.set 'publish'
                javaVersion.set '21'
                needs.add('build')
                tag.set('${{needs.build.outputs.version}}')
                gradlew 'Publish', 'publish'
                mavenRelease('github')
            }
        }
    }

    apply()
}

sourceSets {
    testmod {}
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
    registerFeature('testmod') {
        usingSourceSet(sourceSets.testmod)
        disablePublication()
    }
}

repositories {
    mavenCentral()
    maven {
        url = 'https://maven.fabricmc.net/'
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    compileOnly 'net.fabricmc:sponge-mixin:0.14.0+mixin.0.8.6'
    compileOnly 'org.apache.logging.log4j:log4j-api:2.22.1'

    testmodCompileOnly 'net.fabricmc:sponge-mixin:0.14.0+mixin.0.8.6'
    testmodCompileOnly 'org.apache.logging.log4j:log4j-api:2.22.1'
    testmodCompileOnly 'maven.modrinth:embeddium:B3uyzMOQ'
}

tasks.named('compileTestmodJava', JavaCompile) {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

['processResources', 'processTestmodResources'].each { tasks.named(it, ProcessResources) {
    var replaceProperties = [
            version: project.version as String
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/neoforge.mods.toml', 'fabric.mod.json']) {
        expand replaceProperties
    }
}}

publishing {
    managedVersioning.publishing.mavenRelease(it)

    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
